NO_WERROR=
WERROR=
#
# SVA home: Note that this variable is used in the kernel configuration for SVA
# and must be set. 
#
SVA_HOME=/home/dautenh1/active/sva/sva.git

#
# Build SVA kernel by default
#
KERNCONF=SVA

#
# Skip some steps to speed up kernel compiles. -- if building with the sva test
# script then these are automatically managed. Uncomment if you do not build
# using the ruby script. Note that these should be commented out when building
# the kernel the first time. After that these can be used to speed up the build
# process. If you are seeing odd behavior doing a completely new build is
# useful to workout configuration/rebuilding issues.
#
#NO_KERNELCLEAN=true
#NO_KERNELCONFIG=true
#NO_KERNELDEPEND=true
#NO_KERNELOBJ=true

#
# SVA LLVM with CFI and SFI
#
# Set the instrumentation flags.
#   Options: -mllvm -x86-add-cfi, -mllvm -add-sfi
#
# Nothing means to use the mentioned llvm, without any instrumentation
#
SVA_INST_FLAGS=-mllvm -x86-add-cfi
CC=${SVA_HOME}/llvm-obj/Release+Asserts/bin/clang -I${SVA_HOME}/SVA/include ${SVA_INST_FLAGS}
CXX=${SVA_HOME}/llvm-obj/Release+Asserts/bin/clang++ -I${SVA_HOME}/SVA/include ${SVA_INST_FLAGS}
CPP=${SVA_HOME}/llvm-obj/Release+Asserts/bin/clang-cpp -I${SVA_HOME}/SVA/include ${SVA_INST_FLAGS}

#
# Include SVA header files
#
CFLAGS+=-I${SVA_HOME}/SVA/include
